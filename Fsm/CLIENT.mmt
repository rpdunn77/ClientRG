package Fsm::CLIENT;
#================================================================--
# File Name    : Fsm/LIGHT.pm
#
# Purpose      : implements task LIGHT (light selection)
#
# Author       : Peter Walsh, Vancouver Island University
#
# System       : Perl (Linux)
#
#=========================================================

$| = 1;
use strict;
use warnings;


my $myport;
my $starttime;
my $elapsedtime;

include(mmt.pl)

sub  new {
   my $class = shift @_;
   my %params = @_;

 my $self = {
      port => my $port
   };
   
   if (defined($params{port})) {
      $self->{port} = $params{port};
      $myport = $self->{port};
   } else {
      die(Exc::Exception->new(port => "Task::CLIENT PORT undefined"));
   }

   bless ($self, $class);
   return $self;
}

mmt_TableBegin 

my $ns;


mmt_TableRow(
   "UNREG", 
   
   my $reg = Table::SVAR->get_value("sv_regbutton");
   my $regack = Table::SVAR->get_value("sv_regack");
   if($reg == 1){
      my $regmsg = "REG_" . $myport;
      $main::line->enqueue_packet($regmsg);
      $ns = "WAITREG";
      Table::TASK->reset("REGACKTO");
   }elsif($regack){
      Plant::SYSTEM->set_lights("red", "gray", "gray");
      $ns = "WAITONDECK";
   }else{ 
      $ns = "UNREG";
   }
   Table::TASK->suspend("CLIENT"),
   
   $ns
)

 
mmt_TableRow(
   "WAITREG", 
   my $regack = Table::SVAR->get_value("sv_regack");
   my $regackto = Table::SVAR->get_value("sv_regackto");
   if($regack){
      Plant::SYSTEM->set_lights("red", "gray", "gray");
      $ns = "WAITONDECK";
   }elsif($regackto){
      Plant::SYSTEM->set_regbutton("grey");
      Table::SVAR->assign("sv_regbutton", 0);
      $ns = "UNREG";
   }else{
      $ns = "WAITREG";
   }
   
   Table::TASK->suspend("CLIENT"),

   $ns
)

mmt_TableRow(
   "WAITONDECK", 

   my $ondeck = Table::SVAR->get_value("sv_ondeck");
   
   if($ondeck){
      Plant::SYSTEM->set_lights("gray", "yellow", "gray");
      $ns = "WAITGO";
   }else{
      $ns = "WAITONDECK";
   }
   
   Table::TASK->suspend("CLIENT"),

   $ns
)

mmt_TableRow(
   "WAITGO", 

   my $go = Table::SVAR->get_value("sv_go");
   
   if($go){
      $ns = "GO";
   }else{
      $ns = "WAITONDECK";
   }
   
   Table::TASK->suspend("CLIENT"),

   $ns
)

mmt_TableRow(
   "GO",
   
   if(!(defined($starttime))){
      Plant::SYSTEM->set_lights("gray", "gray", "green");
      $starttime = time();
      print $starttime . "\n";
   }
   Plant::SYSTEM->set_lights("gray", "gray", "green");
   my $stop = Table::SVAR->get_value("sv_stopbutton");
   if($stop == 1){
      my $stoptime = time();
      $elapsedtime = $stoptime - $starttime;
      print $stoptime . "\n";
      my $donemsg = "DONE_" . $myport . "_" . $elapsedtime;
      $main::line->enqueue_packet($donemsg);
      $ns = "STOP";
   }else{
      $ns = "GO";
   }
   Table::TASK->suspend("CLIENT"),

   $ns
)

mmt_TableRow(
   "STOP",

   Plant::SYSTEM->set_lights("gray", "gray", "gray");
   $ns = "STOP";
   
   Table::TASK->suspend("CLIENT"),

   $ns
)

mmt_TableEnd

mmt_Reset(
   "UNREG",
   Plant::SYSTEM->set_lights("gray", "gray", "gray");
   Plant::SYSTEM->set_regbutton("grey");
   Plant::SYSTEM->set_stopbutton("grey");
   Table::SVAR->assign("sv_stopbutton", 0);
   Table::SVAR->assign("sv_regbutton", 0);
   Table::SVAR->assign("sv_regack", 0);
   Table::SVAR->assign("sv_ondeck", 0);
   Table::SVAR->assign("sv_go", 0);
   undef($starttime);

)

1;
